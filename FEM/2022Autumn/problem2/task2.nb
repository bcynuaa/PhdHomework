(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    214943,       4091]
NotebookOptionsPosition[    211642,       4030]
NotebookOutlinePosition[    212172,       4049]
CellTagsIndexPosition[    212129,       4046]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:516c\:5f0f\:63a8\:5bfc", "Title",
 CellChangeTimes->{{3.882617767250823*^9, 
  3.882617770682908*^9}},ExpressionUUID->"b665d37f-68c1-45a9-8208-\
609b36e6e820"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q1", "=", 
   RowBox[{"\[Theta]1", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q2", "=", 
   RowBox[{"\[Theta]2", "[", "t", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{
    RowBox[{"f", "'"}], "[", "t", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.882610982993432*^9, 3.8826110689105687`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"82a421d6-60da-40ca-8786-c77a5815680c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T1", "=", 
   RowBox[{
    RowBox[{
     FractionBox["m1", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L1", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], "q1"}], " ", 
           RowBox[{"Cos", "[", "q1", "]"}]}], "+", "v"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"L1", 
          RowBox[{
           SubscriptBox["\[PartialD]", "t"], "q1"}], " ", 
          RowBox[{"Sin", "[", "q1", "]"}]}], ")"}], "2"]}], ")"}]}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", 
   RowBox[{
    RowBox[{
     FractionBox["m2", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L1", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], "q1"}], " ", 
           RowBox[{"Cos", "[", "q1", "]"}]}], "+", 
          RowBox[{"L2", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], "q2"}], " ", 
           RowBox[{"Cos", "[", "q2", "]"}]}], "+", "v"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L1", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], "q1"}], " ", 
           RowBox[{"Sin", "[", "q1", "]"}]}], "+", 
          RowBox[{"L2", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], "q2"}], " ", 
           RowBox[{"Sin", "[", "q2", "]"}]}]}], ")"}], "2"]}], ")"}]}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"T1", "+", "T2"}], ")"}], "//", "FullSimplify"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.88261109779017*^9, 3.882611276838031*^9}, {
   3.8826125809851465`*^9, 3.8826126079355974`*^9}, {3.88261293262578*^9, 
   3.8826129360030837`*^9}, {3.8826129869786973`*^9, 
   3.8826129997669506`*^9}, {3.8826140687721434`*^9, 3.88261407435933*^9}, 
   3.8826163689908595`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"b5fc2f36-3ea6-4449-88c4-121d9ff55532"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "//", "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.882613223075009*^9, 3.8826132253576345`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"31632029-b4cc-41c3-aa00-714d6b26787a"],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "L1", " ", 
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}], " ", 
         RowBox[{"cos", "(", 
          RowBox[{"\[Theta]1", "(", "t", ")"}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["f", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox["L1", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], "2"]}]}], ")"}]}], "+", 
     RowBox[{"m2", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "(", "t", ")"}], "+", 
           RowBox[{"L1", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]1", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"L2", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{"\[Theta]2", "(", "t", ")"}], ")"}]}]}], ")"}], "2"], 
        "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"L1", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]1", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"L2", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"sin", "(", 
             RowBox[{"\[Theta]2", "(", "t", ")"}], ")"}]}]}], ")"}], "2"]}], 
       ")"}]}]}], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.8826132257855487`*^9, 3.8826140777025433`*^9, 3.8826163718890467`*^9, 
   3.8826179664691234`*^9, {3.882618268346146*^9, 3.8826182868156357`*^9}, 
   3.8826186382185*^9, 3.8826189189524784`*^9, 3.882619109462797*^9, 
   3.882620950006456*^9, 3.8826215410207596`*^9, 3.8826216512253904`*^9, 
   3.88262169577596*^9, 3.8826230413391933`*^9, 3.8826234676846843`*^9, 
   3.882623831742943*^9, 3.882624792043477*^9, 3.8826890692634935`*^9, 
   3.882689135301758*^9, 3.8826894876538734`*^9},
 CellLabel->
  "Out[8]//TraditionalForm=",ExpressionUUID->"eef6f888-8a48-48a7-84a6-\
b1ac7e5b410c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "m1"}], " ", "g", " ", "L1", " ", 
      RowBox[{"Cos", "[", "q1", "]"}]}], "-", 
     RowBox[{"m2", " ", "g", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L1", " ", 
         RowBox[{"Cos", "[", "q1", "]"}]}], "+", 
        RowBox[{"L2", " ", 
         RowBox[{"Cos", "[", "q2", "]"}]}]}], ")"}]}]}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L", "=", 
   RowBox[{
    RowBox[{"T", "-", "V"}], "//", "FullSimplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"L", "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.8826139188409395`*^9, 3.882613919083069*^9}, {
  3.882613950232803*^9, 3.882614014460091*^9}, {3.88261405191982*^9, 
  3.8826140848929124`*^9}, {3.8826141236980853`*^9, 3.882614125644548*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"316ef283-ec0a-4a96-881c-557474e3ed22"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m1", "+", "m2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "L1", " ", 
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]1", "(", "t", ")"}], ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], "2"], "+", 
         RowBox[{
          SuperscriptBox["L1", "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Theta]1", "\[Prime]",
             MultilineFunction->None], "(", "t", ")"}], "2"]}]}], ")"}]}], 
      "+", 
      RowBox[{"2", " ", "L2", " ", "m2", " ", 
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]2", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{"L1", " ", 
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{
            RowBox[{"\[Theta]1", "(", "t", ")"}], "-", 
            RowBox[{"\[Theta]2", "(", "t", ")"}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["L2", "2"], " ", "m2", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]2", "\[Prime]",
          MultilineFunction->None], "(", "t", ")"}], "2"]}]}], ")"}]}], "+", 
   RowBox[{"g", " ", "L1", " ", 
    RowBox[{"(", 
     RowBox[{"m1", "+", "m2"}], ")"}], " ", 
    RowBox[{"cos", "(", 
     RowBox[{"\[Theta]1", "(", "t", ")"}], ")"}]}], "+", 
   RowBox[{"g", " ", "L2", " ", "m2", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"\[Theta]2", "(", "t", ")"}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.882614077859604*^9, 3.8826141283472986`*^9, 3.8826163728761215`*^9, 
   3.8826179681288853`*^9, {3.8826182691472225`*^9, 3.882618286871624*^9}, 
   3.8826186399307375`*^9, 3.882618920601266*^9, 3.882619110540886*^9, 
   3.8826209510469427`*^9, 3.8826215421628428`*^9, 3.882621652447588*^9, 
   3.88262169688863*^9, 3.882623042236905*^9, 3.8826234687857823`*^9, 
   3.8826238327866936`*^9, 3.88262479384015*^9, 3.8826890700510397`*^9, 
   3.882689136137761*^9, 3.8826894884140496`*^9},
 CellLabel->
  "Out[11]//TraditionalForm=",ExpressionUUID->"9d6c5b48-7551-414e-ad77-\
5757fc25b3e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], "q1"}], ")"}]], "L"}], ")"}]}], 
      "-", 
      RowBox[{
       SubscriptBox["\[PartialD]", "q1"], "L"}]}], "\[Equal]", "0"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[PartialD]", "t"], "q2"}], ")"}]], "L"}], ")"}]}], 
      "-", 
      RowBox[{
       SubscriptBox["\[PartialD]", "q2"], "L"}]}], "\[Equal]", "0"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq1", "//", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{"eq2", "//", "TraditionalForm"}]}], "Input",
 CellChangeTimes->{{3.8826159214760904`*^9, 3.8826159474586787`*^9}, {
  3.8826161960137*^9, 3.8826162719489627`*^9}, {3.8826163428779283`*^9, 
  3.882616344323514*^9}, {3.882616404590522*^9, 3.8826164212236185`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6cace196-82a6-47d3-9445-227e5925dd50"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"L1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m1", "+", "m2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Theta]1", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{"g", " ", 
          RowBox[{"sin", "(", 
           RowBox[{"\[Theta]1", "(", "t", ")"}], ")"}]}], "+", 
         RowBox[{"L1", " ", 
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
            MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], "+", 
      RowBox[{"L2", " ", "m2", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]2", "\[Prime]",
          MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
       RowBox[{"sin", "(", 
        RowBox[{
         RowBox[{"\[Theta]1", "(", "t", ")"}], "-", 
         RowBox[{"\[Theta]2", "(", "t", ")"}]}], ")"}]}], "+", 
      RowBox[{"L2", " ", "m2", " ", 
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{
         RowBox[{"\[Theta]1", "(", "t", ")"}], "-", 
         RowBox[{"\[Theta]2", "(", "t", ")"}]}], ")"}]}]}], ")"}]}], 
   "\[LongEqual]", "0"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.882616273713323*^9, {3.882616344740452*^9, 3.8826163738549223`*^9}, 
   3.88261642180223*^9, 3.8826179697031283`*^9, {3.882618270351362*^9, 
   3.8826182869255905`*^9}, 3.882618641505972*^9, 3.882618922409067*^9, 
   3.8826191119526987`*^9, 3.88262095248781*^9, 3.8826215437025695`*^9, 
   3.8826216540791264`*^9, 3.882621698390087*^9, 3.8826230443439903`*^9, 
   3.882623470340781*^9, 3.8826238342265944`*^9, 3.882624795405173*^9, 
   3.882689071135689*^9, 3.8826891372779484`*^9, 3.882689489508093*^9},
 CellLabel->
  "Out[14]//TraditionalForm=",ExpressionUUID->"c23d7552-0527-49c9-80d9-\
349a08abc76e"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"L2", " ", "m2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["f", "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]2", "(", "t", ")"}], ")"}]}], "+", 
      RowBox[{"g", " ", 
       RowBox[{"sin", "(", 
        RowBox[{"\[Theta]2", "(", "t", ")"}], ")"}]}], "-", 
      RowBox[{"L1", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]1", "\[Prime]",
          MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
       RowBox[{"sin", "(", 
        RowBox[{
         RowBox[{"\[Theta]1", "(", "t", ")"}], "-", 
         RowBox[{"\[Theta]2", "(", "t", ")"}]}], ")"}]}], "+", 
      RowBox[{"L1", " ", 
       RowBox[{
        SuperscriptBox["\[Theta]1", "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}], " ", 
       RowBox[{"cos", "(", 
        RowBox[{
         RowBox[{"\[Theta]1", "(", "t", ")"}], "-", 
         RowBox[{"\[Theta]2", "(", "t", ")"}]}], ")"}]}], "+", 
      RowBox[{"L2", " ", 
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]\[Prime]",
         MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], 
   "\[LongEqual]", "0"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.882616273713323*^9, {3.882616344740452*^9, 3.8826163738549223`*^9}, 
   3.88261642180223*^9, 3.8826179697031283`*^9, {3.882618270351362*^9, 
   3.8826182869255905`*^9}, 3.882618641505972*^9, 3.882618922409067*^9, 
   3.8826191119526987`*^9, 3.88262095248781*^9, 3.8826215437025695`*^9, 
   3.8826216540791264`*^9, 3.882621698390087*^9, 3.8826230443439903`*^9, 
   3.882623470340781*^9, 3.8826238342265944`*^9, 3.882624795405173*^9, 
   3.882689071135689*^9, 3.8826891372779484`*^9, 3.8826894895579824`*^9},
 CellLabel->
  "Out[15]//TraditionalForm=",ExpressionUUID->"db625bd3-41cb-42fe-a9e7-\
ace0c2f1e001"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:4e00\:4e2a\:4f8b\:5b50", "Title",
 CellChangeTimes->{
  3.8826178991035953`*^9},ExpressionUUID->"a58b2f6a-7a83-4d64-92c2-\
f1aa1e9cde75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"case", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"m1", "\[Rule]", "2"}], ",", 
     RowBox[{"m2", "\[Rule]", "1"}], ",", 
     RowBox[{"g", "\[Rule]", "9.8"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"3", "t"}], "+", "1"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "''"}], "[", "t", "]"}], "\[Rule]", "3"}], ",", 
     RowBox[{"L1", "\[Rule]", "0.5"}], ",", 
     RowBox[{"L2", "\[Rule]", "0.3"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equation", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eq1", ",", "eq2"}], "}"}], "/.", "case"}], "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"equation", ",", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "0", "]"}], "\[Equal]", 
     RowBox[{"10", "*", 
      FractionBox["\[Pi]", "180"]}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"equation", ",", 
    RowBox[{
     RowBox[{"\[Theta]2", "[", "0", "]"}], "\[Equal]", 
     RowBox[{"20", "*", 
      FractionBox["\[Pi]", "180"]}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"equation", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]1", "'"}], "[", "0", "]"}], "\[Equal]", "2"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"equation", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]2", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "]"}],
   ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8826179093447313`*^9, 3.88261794317999*^9}, {
  3.882618020468544*^9, 3.882618062719765*^9}, {3.882618103123004*^9, 
  3.8826182213711157`*^9}, {3.88261825471891*^9, 3.8826183241912146`*^9}, {
  3.8826183704691467`*^9, 3.8826183714960947`*^9}, {3.8826184536813974`*^9, 
  3.8826184858223553`*^9}, {3.882618541231073*^9, 3.8826185534972057`*^9}, {
  3.8826215268454537`*^9, 3.8826215381297016`*^9}, {3.8826215692051954`*^9, 
  3.8826215716816015`*^9}, {3.8826216070049872`*^9, 3.8826216345559697`*^9}, {
  3.882621669294042*^9, 3.882621692831606*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"ebe324a8-2c12-4e1c-8fc8-5c687dd68a9f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"equation", ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "res"}], "Input",
 CellChangeTimes->{{3.882618326525362*^9, 3.882618363044528*^9}, {
  3.8826185152969365`*^9, 3.8826185362965384`*^9}, {3.882618686923992*^9, 
  3.8826187020731907`*^9}, {3.8826187475739746`*^9, 3.8826187859756565`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"fc6d7ac0-50d9-4bcc-8553-465d42be7c58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]1", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7QG90iG1fGPzd0wYnD
3cQ/4Patz2fV1z/SUFjDa77VP3mMrqBbp84/IqE47Akn4D+g9fWatsi+v9Wb
k3tZVOU/na2nqxXb3r+7wbiC/fHqP13TlBOR5+i/gEqXStgX8D81Qp72A8Hs
v7tJtw/c7vI/hOT5E8rl6L/ziT6Xnbj1P6aXbeaXk9y/2iBupGZS+D+K+L2H
0mWhv1rNgu1ZJPs/fP6luuqa0z+J0D+8VMb9PxRbCSPNqNU/WwqypoYtAEC8
C0HI/Eq6Pz63Ng34kwFAyhgB/VBs0b94j482beICQExbskdFBeO/f/LaffdM
BECPxVpk3LvrvwX2WabgsAVAGGC7Dozb7L/iJK2RzfwGQMTFsZuOteW/jN7y
ms9kCEDNauhri6XPv43DDGfVtAlAwmp/HvEQwj9bMxlR8CALQNFXHIVhZNU/
p0NZHGqGDEDFCuoBdYPMP0t/barn0w1AR2ZFoxmZsL+8RXRWej0PQMnbuTqC
6Nq/wpunYohHEEBSipvi7D/ov+XkrgoD7RBANStNEZI57r9vc69BiKARQPsA
Aimt2eq/pRcaWg9IEkCSWogYEf3ev0EBfgGh/RJAbM7VUlGXpL8cu3sZ4q8T
QJYyfNQHus8/oorjEiVWFEBl68usNkPTP4+fRJtyChVAYDBY75SZvT8oyg8F
wrIVQFu3q6zRsMe/AMV038BXFkAbhkYjyY3hvz4F00jKChdAVVdtnjmE7L8o
W5uT1bEXQDeRQjojhu6/ePZcbetmGEBdcZxt7OHlv3SniCgDEBlAGbbx3NHQ
0b+vKE5UyrUZQKCfophZl60/Ue8MD5xpGkDmhn8+zY7RP5/LNatvERtAL0wE
b8ga0T9T7VfWTccbQH6jtIsg/KE/R98Tctt5HEBXox0TEgfWv+bmOe9qIB1A
B9ds7n2j57/rM1n7BNUdQGaXNdHE2e6/nJbi6KB9HkDdY8ZNGkvrv4zJBUfs
Ih9A/JWs/jql4L/iQSI0QtYfQAW2MGURWMG/8mdUAc0+IED6W8XzC4LDP6ZR
FDB+mSBA6uZTBwjT0z96IyEXh/IgQGdvKr8kZ8o/JADj7pBFIUDO4Qz4v0u5
v4F/IQ6gnyFAIkOOiGGH4b+0CRUesPMhQFwt0Uj69Ou/mjaFdcVOIkBOHKJC
ELDtv59LQoUyqCJAi9UVKSrI5b96a7SFoPsiQBAOFTou89W/CC6jzRNWI0BQ
c0Z10j2DP2z7RgaIqiNAE1Yau/mU0T8yFFD6//8jQETKTlDZwdQ/rd3cDA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6333#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {-0.9640831075782728, 
                   0.37240023881154904`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7QG90iG1fGPzd0wYnD
3cQ/4Patz2fV1z/SUFjDa77VP3mMrqBbp84/IqE47Akn4D+g9fWatsi+v9Wb
k3tZVOU/na2nqxXb3r+7wbiC/fHqP13TlBOR5+i/gEqXStgX8D81Qp72A8Hs
v7tJtw/c7vI/hOT5E8rl6L/ziT6Xnbj1P6aXbeaXk9y/2iBupGZS+D+K+L2H
0mWhv1rNgu1ZJPs/fP6luuqa0z+J0D+8VMb9PxRbCSPNqNU/WwqypoYtAEC8
C0HI/Eq6Pz63Ng34kwFAyhgB/VBs0b94j482beICQExbskdFBeO/f/LaffdM
BECPxVpk3LvrvwX2WabgsAVAGGC7Dozb7L/iJK2RzfwGQMTFsZuOteW/jN7y
ms9kCEDNauhri6XPv43DDGfVtAlAwmp/HvEQwj9bMxlR8CALQNFXHIVhZNU/
p0NZHGqGDEDFCuoBdYPMP0t/barn0w1AR2ZFoxmZsL+8RXRWej0PQMnbuTqC
6Nq/wpunYohHEEBSipvi7D/ov+XkrgoD7RBANStNEZI57r9vc69BiKARQPsA
Aimt2eq/pRcaWg9IEkCSWogYEf3ev0EBfgGh/RJAbM7VUlGXpL8cu3sZ4q8T
QJYyfNQHus8/oorjEiVWFEBl68usNkPTP4+fRJtyChVAYDBY75SZvT8oyg8F
wrIVQFu3q6zRsMe/AMV038BXFkAbhkYjyY3hvz4F00jKChdAVVdtnjmE7L8o
W5uT1bEXQDeRQjojhu6/ePZcbetmGEBdcZxt7OHlv3SniCgDEBlAGbbx3NHQ
0b+vKE5UyrUZQKCfophZl60/Ue8MD5xpGkDmhn8+zY7RP5/LNatvERtAL0wE
b8ga0T9T7VfWTccbQH6jtIsg/KE/R98Tctt5HEBXox0TEgfWv+bmOe9qIB1A
B9ds7n2j57/rM1n7BNUdQGaXNdHE2e6/nJbi6KB9HkDdY8ZNGkvrv4zJBUfs
Ih9A/JWs/jql4L/iQSI0QtYfQAW2MGURWMG/8mdUAc0+IED6W8XzC4LDP6ZR
FDB+mSBA6uZTBwjT0z96IyEXh/IgQGdvKr8kZ8o/JADj7pBFIUDO4Qz4v0u5
v4F/IQ6gnyFAIkOOiGGH4b+0CRUesPMhQFwt0Uj69Ou/mjaFdcVOIkBOHKJC
ELDtv59LQoUyqCJAi9UVKSrI5b96a7SFoPsiQBAOFTou89W/CC6jzRNWI0BQ
c0Z10j2DP2z7RgaIqiNAE1Yau/mU0T8yFFD6//8jQETKTlDZwdQ/rd3cDA==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6333#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {-0.9640831075782728, 
                   0.37240023881154904`}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 10.}}, {
       5, 7, 2, {791}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1:eJw9mXdUD178/9t7vlvvxrv3QjsZlTTusxJlRBoiiUgiI6OEREpDnygpUkLT
TEuhjSJEVEqpaGrQ3uPb+X5/53fPuedx7vPc5/P1un/cP+65TNejW924ODg4
OBemHDfH/x9iCTxJXv9Nm/wfhcn/UZFUnjJfLfNw0f9baxBPweQjrxUtyYf/
1e1Ia+fKQsu1zmRKQ4phMuhKnum4fafPnydZbrs3fzELI5flg7cLXIoiyzl2
XUlvjyUt/7s/gZxaXtJ64tF9cmaww/V1dirxfybcQSl4SAKPLnN3ffOUWMQ+
GnHcn0neeRflXjiYTQ48X+IZ9ieXCIxFsKIP5JN03fH6hK6XxPKUy9W0/YWk
O6fCIrOjmKyZkjvvvLyUaPCvrTvoX0Yo0ie1T398TSYY9y8Hyb8lLVpfmqP2
l5Py1XN6d7MryJN1mlefcLwn0XY7ul5uqiTvc9+epjd8IAeV1qjEC38iQpfK
aqkmVeTRHwTeOPaZLEl3kQ+1+UK8G+8cq+j5QsrFmit4A6tJ2tEVSQz5ryTk
S8h5w6dfyYFlzdsdzL8Rq6gVul7134j6cIhE+OEaImTX3JvKVUt6c1ZUlMbW
Et9vtL8pznWEf4hfJoz9ncRIDBke+fOdLFra5Lo1o55kbSoP1TvVQOD57JmC
4Q/yOSzu+xxHI3F+EDj3u7yRXM79kGfyuIlklFK84iJ/kvpP29XHvJsJ54+7
bTY7W4jM8ImqOkYrUfeVexR4vZWYzL8MXs73i9gG7drXevoXcRfmMo3o/UXO
RabQjHb9JtfkrKb+fPlNUhL66mLN28gL9rVsi+dt5Khydo65dDtZIl+Xa3q8
nTRJTT4nX9pJlJhSvrF2B7EUJC8MwzvIHLfrS4OeDpIzF/hK37KTHJxMK9BN
7SSMkcrCFTxdpO5vf9Ey1y4S/keiZGlJF+E9tjEL0t3Ebyw42eZANxk99zrG
taCbHOaeDzkh8Yd0hq4+G7jvD9kl4X34Rv4fUheT6ZIq0kM20/pt8nb3kCDt
661PWnpIATE4mryrlwxtaZmN+9lL1FyDwiN39hGXExqKIY19JCaw+sH5Hf3k
4w2fVaca+glXGq3ikONfYpD/2t71+19y9L1Hu6PDP5L6Q/zE5tp/hNmbFU/V
GyAD3T/9Qy8OkKJOgb1THwfIf+0r1h6iDhKn37vUmvYOEvXWUJFNGYNk4mfO
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
rxX7ajjJhvSGH4eOzrPxf78Vi/A/7JHBnA==
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1lMQGLgCQNFia9u2bbdb27Zt2+3Wts3d2rZt27bf6WtmzuQnX8ncJAka
tK3QJmCAAAGiBw7w//F7CkoIQhOOiET5vYZYxCUBiUlGStKQnkxkJQe5yUdB
ClOMkpShPJWoSg1qU4+GNKE5rWhLBzrTjZ70oT+DGMo/jGIsE5jMNGYyh/ks
YikrWM0a1rOJrexgN/s4yBGOc4qzXOAy17jJHe7ziKe84DXv+MgXvvOLQDY4
CMEJRVgiEJloxCQO8UlEUlKQmnRkJAvZyUVeCvA3RSlBacpRkSpUpxZ1aUBj
mtGS3wfenk50pQe96cdAhjCckYxhPJOYygxmM4+FLGE5q/iPdWxkC9vZxV4O
cJhjnOQM57nEVW5wm3s85AnPecVbPvCZb/wkYKAAAf4iGCEJQ3giEZUYxCYe
CUlCclKRlgxkJhs5yUN+ClGE4pSiLBWoTDVqUof6NKIpLWhNOzrShe70oi8D
GMwwRjCacUxkCtOZxVwWsJhlrORf1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7y
gMc84yVveM8nvvIj0J/4AxOUEIQmHBGJEvjPHRGLuCQgMclISRrSk4ms5CA3
+ShIYYpRkjKUpxJVqUFt6tGQJjSnFW3pQGe60ZM+9GcQQ/mHUYxlApOZxkzm
MJ9FLGUFq1nDejaxlR3sZh8HOcJxTnGWC1zmGje5w30e8ZQXvOYdH/nCd34R
6C/9E5xQhCUCkYlGTOIQn0QkJQWpSUdGspCdXOSlAH9TlBKUphwVqUJ1alGX
BjSmGS1pQ3s60ZUe9KYfAxnCcEYyhvFMYiozmM08FrKE5aziP9axkS1sZxd7
OcBhjnGSM5znEle5wW3u8ZAnPOcVb/nAZ77xk4BB9E8wQhKG8EQiKjGITTwS
koTkpCItGchMNnKSh/wUogjFKUVZKlCZatSkDvVpRFNa0Jp2dKQL3elFXwYw
mGGMYDTjmMgUpjOLuSxgMctYyb+sZQOb2cZO9rCfQxzlBKc5x0WucJ1b3OUB
j3nGS97wnk985UeQPw9/YIISgtCEIyJRiE4s4pKAxCQjJWlITyaykoPc5KMg
hSlGScpQnkpUpQa1qUdDmtCcVrSlA53pRk/60J9BDOUfRjGWCUxmGjOZw3wW
sZQVrGYN69nEVnawm30c5AjHOcVZLnCZa9zkDvd5xFNe8Jp3fOQL3/lFoGD6
JzihCEsEIhONmMQhPolISgpSk46MZCE7uchLAf6mKCUoTTkqUoXq1KIuDWhM
M1rShvZ0ois96E0/BjKE4YxkDOOZxFRmMJt5LGQJy1nFf6xjI1vYzi72coDD
HOMkZzjPJa5yg9vc4yFPeM4r3vKBz3zjJwGD659ghCQM4YlEVGIQm3gkJAnJ
SUVaMpCZbOQkD/kpRBGKU4qyVKAy1ahJHerTiKa0oDXt6EgXutOLvgxgMMMY
wWjGMZEpTGcWc1nAYpaxkn9ZywY2s42d7GE/hzjKCU5zjotc4Tq3uMsDHvOM
l7zhPZ/4yo/gfz79gQlKCEITjohEITqxiEsCEpOMlKQhPZnISg5yk4+CFOZ/
J0+Qbw==
        "], CompressedData["
1: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
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"\[Theta]2", "\[Rule]", 
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7+s+QAGVfWPzd0wYnD
3cQ/Wz4cs+mD2z/SUFjDa77VPzsO9Di5e9o/IqE47Akn4D8BNoTMrqDCP9Wb
k3tZVOU/PP1vblNX4L+7wbiC/fHqPwPeC/AokfK/gEqXStgX8D90ujFpOd/0
v7tJtw/c7vI/hpo9VKWz77/ziT6Xnbj1P3jzHzAfI9i/2iBupGZS+D9rsto2
dAy6P1rNgu1ZJPs/auDEEn9g2D+J0D+8VMb9P46FXkNDn+A/WwqypoYtAEBT
9U2oUCTcPz63Ng34kwFAIy8YCQWWwr94j482beICQNY8z7ITruy/f/LaffdM
BEAqSX5lIO3zvwX2WabgsAVAEQypczzA8b/iJK2RzfwGQADD3C2ZcOe/jN7y
ms9kCEDmyqL5HATNv43DDGfVtAlASGTp20IJyz9bMxlR8CALQHYucfqdteE/
p0NZHGqGDEDoWdlvb1TjP0t/barn0w1ArGAHqQcbyT+8RXRWej0PQIc7Ywl8
VeS/wpunYohHEED5RVS2d6Dxv+XkrgoD7RBAd6OA4t/38b9vc69BiKARQCBO
uxiOWe2/pRcaWg9IEkCflUq8VhXjv0EBfgGh/RJAl8NgylD7pr8cu3sZ4q8T
QATerdg4wN8/oorjEiVWFEAJvCd2hpHmP4+fRJtyChVATxPOxV+I3T8oyg8F
wrIVQFgthIISTcy/AMV038BXFkDYGJnP5Orqvz4F00jKChdAxw0QrKfD8L8o
W5uT1bEXQPBVCmVcPPC/ePZcbetmGECFWJt2ocHrv3SniCgDEBlANApK1X88
3L+vKE5UyrUZQETfzoY+mMw/Ue8MD5xpGkBKS1tAXe7lP5/LNatvERtAXx34
qv5H5T9T7VfWTccbQA62Dcn7ocQ/R98Tctt5HEBy6yfI1wXhv+bmOe9qIB1A
1FR6NVuR7L/rM1n7BNUdQDXKC8H/bPC/nJbi6KB9HkBtoKqXpsrwv4zJBUfs
Ih9A62EcU8MH6r/iQSI0QtYfQDdWmumGrbe/8mdUAc0+IEA70JDx2w7hP6ZR
FDB+mSBAitEVtA0a5j96IyEXh/IgQFrA7GZZGtk/JADj7pBFIUD0/IpkRN7A
v4F/IQ6gnyFAbL2B7uKy5L+0CRUesPMhQPpxDnPXnO6/mjaFdcVOIkAH285F
KmPyv59LQoUyqCJA0Xq7BVSj8L96a7SFoPsiQJDCjlN18Ny/CC6jzRNWI0A4
U4EU4uLVP2z7RgaIqiNAnGrHHoLl4z8yFFD6//8jQPQ87HWaz98//WDW8A==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6487#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {-1.304498110690159, 
                   0.7052643115729335}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj7+s+QAGVfWPzd0wYnD
3cQ/Wz4cs+mD2z/SUFjDa77VPzsO9Di5e9o/IqE47Akn4D8BNoTMrqDCP9Wb
k3tZVOU/PP1vblNX4L+7wbiC/fHqPwPeC/AokfK/gEqXStgX8D90ujFpOd/0
v7tJtw/c7vI/hpo9VKWz77/ziT6Xnbj1P3jzHzAfI9i/2iBupGZS+D9rsto2
dAy6P1rNgu1ZJPs/auDEEn9g2D+J0D+8VMb9P46FXkNDn+A/WwqypoYtAEBT
9U2oUCTcPz63Ng34kwFAIy8YCQWWwr94j482beICQNY8z7ITruy/f/LaffdM
BEAqSX5lIO3zvwX2WabgsAVAEQypczzA8b/iJK2RzfwGQADD3C2ZcOe/jN7y
ms9kCEDmyqL5HATNv43DDGfVtAlASGTp20IJyz9bMxlR8CALQHYucfqdteE/
p0NZHGqGDEDoWdlvb1TjP0t/barn0w1ArGAHqQcbyT+8RXRWej0PQIc7Ywl8
VeS/wpunYohHEED5RVS2d6Dxv+XkrgoD7RBAd6OA4t/38b9vc69BiKARQCBO
uxiOWe2/pRcaWg9IEkCflUq8VhXjv0EBfgGh/RJAl8NgylD7pr8cu3sZ4q8T
QATerdg4wN8/oorjEiVWFEAJvCd2hpHmP4+fRJtyChVATxPOxV+I3T8oyg8F
wrIVQFgthIISTcy/AMV038BXFkDYGJnP5Orqvz4F00jKChdAxw0QrKfD8L8o
W5uT1bEXQPBVCmVcPPC/ePZcbetmGECFWJt2ocHrv3SniCgDEBlANApK1X88
3L+vKE5UyrUZQETfzoY+mMw/Ue8MD5xpGkBKS1tAXe7lP5/LNatvERtAXx34
qv5H5T9T7VfWTccbQA62Dcn7ocQ/R98Tctt5HEBy6yfI1wXhv+bmOe9qIB1A
1FR6NVuR7L/rM1n7BNUdQDXKC8H/bPC/nJbi6KB9HkBtoKqXpsrwv4zJBUfs
Ih9A62EcU8MH6r/iQSI0QtYfQDdWmumGrbe/8mdUAc0+IEA70JDx2w7hP6ZR
FDB+mSBAitEVtA0a5j96IyEXh/IgQFrA7GZZGtk/JADj7pBFIUD0/IpkRN7A
v4F/IQ6gnyFAbL2B7uKy5L+0CRUesPMhQPpxDnPXnO6/mjaFdcVOIkAH285F
KmPyv59LQoUyqCJA0Xq7BVSj8L96a7SFoPsiQJDCjlN18Ny/CC6jzRNWI0A4
U4EU4uLVP2z7RgaIqiNAnGrHHoLl4z8yFFD6//8jQPQ87HWaz98//WDW8A==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$6487#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 10.}, {-1.304498110690159, 
                   0.7052643115729335}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 10.}}, {
       5, 7, 2, {791}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1:eJw9mXdUD178/9t7vlvvxrv3QjsZlTTusxJlRBoiiUgiI6OEREpDnygpUkLT
TEuhjSJEVEqpaGrQ3uPb+X5/53fPuedx7vPc5/P1un/cP+65TNejW924ODg4
OBemHDfH/x9iCTxJXv9Nm/wfhcn/UZFUnjJfLfNw0f9baxBPweQjrxUtyYf/
1e1Ia+fKQsu1zmRKQ4phMuhKnum4fafPnydZbrs3fzELI5flg7cLXIoiyzl2
XUlvjyUt/7s/gZxaXtJ64tF9cmaww/V1dirxfybcQSl4SAKPLnN3ffOUWMQ+
GnHcn0neeRflXjiYTQ48X+IZ9ieXCIxFsKIP5JN03fH6hK6XxPKUy9W0/YWk
O6fCIrOjmKyZkjvvvLyUaPCvrTvoX0Yo0ie1T398TSYY9y8Hyb8lLVpfmqP2
l5Py1XN6d7MryJN1mlefcLwn0XY7ul5uqiTvc9+epjd8IAeV1qjEC38iQpfK
aqkmVeTRHwTeOPaZLEl3kQ+1+UK8G+8cq+j5QsrFmit4A6tJ2tEVSQz5ryTk
S8h5w6dfyYFlzdsdzL8Rq6gVul7134j6cIhE+OEaImTX3JvKVUt6c1ZUlMbW
Et9vtL8pznWEf4hfJoz9ncRIDBke+fOdLFra5Lo1o55kbSoP1TvVQOD57JmC
4Q/yOSzu+xxHI3F+EDj3u7yRXM79kGfyuIlklFK84iJ/kvpP29XHvJsJ54+7
bTY7W4jM8ImqOkYrUfeVexR4vZWYzL8MXs73i9gG7drXevoXcRfmMo3o/UXO
RabQjHb9JtfkrKb+fPlNUhL66mLN28gL9rVsi+dt5Khydo65dDtZIl+Xa3q8
nTRJTT4nX9pJlJhSvrF2B7EUJC8MwzvIHLfrS4OeDpIzF/hK37KTHJxMK9BN
7SSMkcrCFTxdpO5vf9Ey1y4S/keiZGlJF+E9tjEL0t3Ebyw42eZANxk99zrG
taCbHOaeDzkh8Yd0hq4+G7jvD9kl4X34Rv4fUheT6ZIq0kM20/pt8nb3kCDt
661PWnpIATE4mryrlwxtaZmN+9lL1FyDwiN39hGXExqKIY19JCaw+sH5Hf3k
4w2fVaca+glXGq3ikONfYpD/2t71+19y9L1Hu6PDP5L6Q/zE5tp/hNmbFU/V
GyAD3T/9Qy8OkKJOgb1THwfIf+0r1h6iDhKn37vUmvYOEvXWUJFNGYNk4mfO
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
rxX7ajjJhvSGH4eOzrPxf78Vi/A/7JHBnA==
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1lMQGLgCQNFia9u2bbdb27Zt2+3Wts3d2rZt27bf6WtmzuQnX8ncJAka
tK3QJmCAAAGiBw7w//F7CkoIQhOOiET5vYZYxCUBiUlGStKQnkxkJQe5yUdB
ClOMkpShPJWoSg1qU4+GNKE5rWhLBzrTjZ70oT+DGMo/jGIsE5jMNGYyh/ks
YikrWM0a1rOJrexgN/s4yBGOc4qzXOAy17jJHe7ziKe84DXv+MgXvvOLQDY4
CMEJRVgiEJloxCQO8UlEUlKQmnRkJAvZyUVeCvA3RSlBacpRkSpUpxZ1aUBj
mtGS3wfenk50pQe96cdAhjCckYxhPJOYygxmM4+FLGE5q/iPdWxkC9vZxV4O
cJhjnOQM57nEVW5wm3s85AnPecVbPvCZb/wkYKAAAf4iGCEJQ3giEZUYxCYe
CUlCclKRlgxkJhs5yUN+ClGE4pSiLBWoTDVqUof6NKIpLWhNOzrShe70oi8D
GMwwRjCacUxkCtOZxVwWsJhlrORf1rKBzWxjJ3vYzyGOcoLTnOMiV7jOLe7y
gMc84yVveM8nvvIj0J/4AxOUEIQmHBGJEvjPHRGLuCQgMclISRrSk4ms5CA3
+ShIYYpRkjKUpxJVqUFt6tGQJjSnFW3pQGe60ZM+9GcQQ/mHUYxlApOZxkzm
MJ9FLGUFq1nDejaxlR3sZh8HOcJxTnGWC1zmGje5w30e8ZQXvOYdH/nCd34R
6C/9E5xQhCUCkYlGTOIQn0QkJQWpSUdGspCdXOSlAH9TlBKUphwVqUJ1alGX
BjSmGS1pQ3s60ZUe9KYfAxnCcEYyhvFMYiozmM08FrKE5aziP9axkS1sZxd7
OcBhjnGSM5znEle5wW3u8ZAnPOcVb/nAZ77xk4BB9E8wQhKG8EQiKjGITTwS
koTkpCItGchMNnKSh/wUogjFKUVZKlCZatSkDvVpRFNa0Jp2dKQL3elFXwYw
mGGMYDTjmMgUpjOLuSxgMctYyb+sZQOb2cZO9rCfQxzlBKc5x0WucJ1b3OUB
j3nGS97wnk985UeQPw9/YIISgtCEIyJRiE4s4pKAxCQjJWlITyaykoPc5KMg
hSlGScpQnkpUpQa1qUdDmtCcVrSlA53pRk/60J9BDOUfRjGWCUxmGjOZw3wW
sZQVrGYN69nEVnawm30c5AjHOcVZLnCZa9zkDvd5xFNe8Jp3fOQL3/lFoGD6
JzihCEsEIhONmMQhPolISgpSk46MZCE7uchLAf6mKCUoTTkqUoXq1KIuDWhM
M1rShvZ0ois96E0/BjKE4YxkDOOZxFRmMJt5LGQJy1nFf6xjI1vYzi72coDD
HOMkZzjPJa5yg9vc4yFPeM4r3vKBz3zjJwGD659ghCQM4YlEVGIQm3gkJAnJ
SUVaMpCZbOQkD/kpRBGKU4qyVKAy1ahJHerTiKa0oDXt6EgXutOLvgxgMMMY
wWjGMZEpTGcWc1nAYpaxkn9ZywY2s42d7GE/hzjKCU5zjotc4Tq3uMsDHvOM
l7zhPZ/4yo/gfz79gQlKCEITjohEITqxiEsCEpOMlKQhPZnISg5yk4+CFOZ/
J0+Qbw==
        "], CompressedData["
1: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
AZN4QsvHryuj/wB9cQf9
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.882618759710151*^9, 3.8826187863722844`*^9}, 
   3.882618923148246*^9, 3.8826191123400793`*^9, 3.882620952911276*^9, 
   3.882621544473604*^9, 3.8826216548532233`*^9, 3.882621698850721*^9, 
   3.882623044971079*^9, 3.8826234707293787`*^9, 3.8826238349176826`*^9, 
   3.8826247961545076`*^9, 3.8826890716833076`*^9, 3.882689137557495*^9, 
   3.882689490075698*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"9d25432f-23b2-4bb4-bd84-7b66117724ea"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"\[Theta]1", "/.", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   RowBox[{"\[Theta]2", "/.", 
    RowBox[{
     RowBox[{"res", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8826187881313944`*^9, 3.8826188596633806`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"6b699dbc-949f-45f3-a56b-2a1439e7ac09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"picture", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["180", "\[Pi]"], 
        RowBox[{"\[Alpha]", "[", "t", "]"}]}], ",", 
       RowBox[{
        FractionBox["180", "\[Pi]"], 
        RowBox[{"\[Beta]", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t\>\"", ",", "\"\<\[Theta]\[Degree]\>\""}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Medium", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Blue"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "->", "\"\<Classic\>\""}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", "picture"}], "Input",
 CellChangeTimes->{{3.8826188660925364`*^9, 3.88261889911936*^9}, {
  3.8826189403633094`*^9, 3.8826189552775803`*^9}, {3.8826219287218804`*^9, 
  3.88262204249747*^9}, {3.882622091536642*^9, 3.8826222314872026`*^9}, {
  3.8826223610142097`*^9, 3.8826223707315626`*^9}, {3.882622511315886*^9, 
  3.8826225178297763`*^9}, {3.8826233467067413`*^9, 3.8826233608612967`*^9}, {
  3.8826233914805584`*^9, 3.8826234513189774`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"c8a5940c-12d5-4754-9b79-45165a0da70f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$6555#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
kVDx1S/mR5kg6sOdhql+KnrUclKM2YUJtM8zja/S+onkqNGVr6eZIHRmPsrr
LxW92BL5fdWPCcbdSMpGw1SkgF8HuMAEg3teh4SOUFGuQveT7TAmWL/sMSMy
SkWapAKGL1eZ4PHXZTF5Gi46knTqUiwTNLUt3X9Cu97Q/1yV3h0mCBJt6LhB
46uIpkivJjPBjS+RPr2055mnK98oeMQE769GdDwepKK6j5yjF57R9LRdSm39
RUW2NRP7NV4zgdo1O+Wwn1TU9qsmZ/4DE+iGVuJTumj96N8Ltg+FTKC54lEp
20brUxzXffzLmCDi2/U3qk1U5CJ1ql6pmub3cyFSXg0VDeuSlCbrmeD2nidz
7yqpyMdOPP5VKxOUy3LvlS6lohmPrWnPHiageLwnCedT0fnwn7Yyv2nPIxq9
jXtHRauJn3OHRpjAjbez8jJtfelR0FnXJSZwLWJ1HrlPRTc6D7aKbzDB9UbL
hJO3qIh9Wk3jFz0zZN3iqzwRSUV44szSMR5m6CeUnZrxoSKZC6dDDykwwz1j
S4FofSrapz9wMFOVGQyjBdRVlGn+0jmqTGgzw+So958QSSoyuW0xcsWUGRym
GQeGWajIOVvp0BsnZshhWVyxpe0XD5/nKstuzODCYnaOvoyCzqiKcZC8mWGB
4wzX0fcUFFbKU9kZxAzLdAmWG7Q+mNK+oMJwhxmOUbnw0hYU9DjNl8MmmRkM
FArahHUoKNtlaCQ1nRlimdf6ivdSUN5Ux+N9OcwQftgog33bDjUxfeY4WkGb
z3zLMuekHWLWujKau8gMJrM9mXostohzY6VyfY0ZzO4Zzl/utkF8FYEZZnQs
EFEw0q792gZJ2Lg5/ORkARce1nNc1jbI0MPsK4sMC8Suu5lF3rRGF5I5Mk84
soDh1saGwLQlGvqXepjjCwvYTFCLHN33o6ckjfP9X1lg5jH9roY9+9HJ+KY7
uXUscODFJZahP+aody9z7cFuFuh4eS6R08Uc/Th4zuDRIgv80F2g3Dxshso+
WkvsU9gFKZtHmC9pm6JUP/oJ29Rd4Mcl0TL80ghZDvtcTjzLCr62qR5s87LI
/PKet+RQVggk1hqf/i2DTAT6epcjWOHeL3MD8xZppG9mo3v8NitUCvElZHzc
gxSeqyzueckKMjGqbPuWxRCHx5JXfh8rdCuoW49+4EQNQ5cPde9nA6+FnSdP
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
          "]]}, Annotation[#, "Charting`Private`Tag$6555#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"\[Theta]\[Degree]\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.2]], BaseStyle -> Automatic, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Directive[
       GrayLevel[0], 
       AbsoluteThickness[0.2]], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> GrayLevel[0], GridLines -> {None, None}, 
     GridLinesStyle -> Automatic, LabelStyle -> Directive[Medium], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "PointSizeFunction" -> 
       None, "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-75.15368273473807, 41.857096000017805`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     GrayLevel[0]}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(2\\)]\\)\""}, "LineLegend",
       DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[Medium], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", "Medium", "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8826221743504143`*^9, 3.8826221886145554`*^9}, 
   3.8826223714555273`*^9, 3.882622518310822*^9, 3.8826230453519387`*^9, {
   3.8826233617629128`*^9, 3.882623398049265*^9}, {3.882623445921039*^9, 
   3.882623471055912*^9}, 3.8826238352714033`*^9, 3.8826247964918537`*^9, 
   3.8826890719276466`*^9, 3.882689137697014*^9, 3.8826894903153353`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a254b54a-2eca-44e3-ba6a-1fb30d7a60c0"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\bcynuaa\\\\Desktop\\\\angle.png\>\"", ",", "picture"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\bcynuaa\\\\Desktop\\\\angle.pdf\>\"", ",", "picture"}],
    "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.882622522018041*^9, 3.882622575191134*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"a247b9c9-4d5b-467b-892c-59e2f7f5f5b0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"node0", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"node1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L1", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "L1"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}]}], "}"}], "/.", 
    "case"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"node2", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"L1", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "L1"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Alpha]", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"L2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Beta]", "[", "t", "]"}], "]"}]}]}]}], "}"}], "/.", 
    "case"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8826191239243956`*^9, 3.8826192352407093`*^9}, {
   3.8826194323685393`*^9, 3.882619433067957*^9}, {3.882619809758695*^9, 
   3.8826198445100937`*^9}, 3.882620920060704*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"885e057c-7eb8-4b0d-b8e8-c9486bab12dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{"node0", ",", "node1"}], "}"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{"node1", ",", "node2"}], "}"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Black", ",", 
         "Dashed", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{"node0", ",", 
            RowBox[{
             RowBox[{"-", "0.1"}], "*", 
             RowBox[{"{", 
              RowBox[{"3", ",", "9.8"}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", "Black", ",", 
         RowBox[{"Point", "[", "node0", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
         RowBox[{"Point", "[", "node1", "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
         RowBox[{"Point", "[", "node2", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesOrigin", "\[Rule]", "node0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.8"}], ",", "0.8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.882620044756414*^9, 3.882620082362381*^9}, {
   3.882620116637849*^9, 3.882620278538329*^9}, {3.8826203720038433`*^9, 
   3.8826203761668987`*^9}, {3.8826204339925857`*^9, 3.8826205328034635`*^9}, 
   3.8826205983720875`*^9, {3.8826206709809923`*^9, 3.8826207648960333`*^9}, {
   3.88262101352569*^9, 3.8826210346739893`*^9}, {3.8826211818151245`*^9, 
   3.8826211849639153`*^9}, {3.882621347651324*^9, 3.8826213895911565`*^9}, {
   3.8826224381565237`*^9, 3.882622469801649*^9}, {3.8826227091243*^9, 
   3.882622744131735*^9}, {3.8826228260780735`*^9, 3.8826229077219977`*^9}, {
   3.8826231425533404`*^9, 3.8826232475537586`*^9}, 3.88262328610458*^9, {
   3.882689000377035*^9, 3.882689060839765*^9}, {3.882689100306064*^9, 
   3.8826891039505806`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"cc83e06d-1720-4428-9183-8d1dc585f614"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"animate", "=", 
   RowBox[{"Animate", "[", 
    RowBox[{
     RowBox[{"graph", "/.", 
      RowBox[{"t", "\[Rule]", "\[Tau]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "10"}], "}"}], ",", 
     RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "animate"}], "Input",
 CellChangeTimes->{{3.882621025106945*^9, 3.882621092023757*^9}, {
  3.882621263039242*^9, 3.8826213246513376`*^9}, {3.8826213562884226`*^9, 
  3.8826213644874926`*^9}, {3.882621408675873*^9, 3.882621411314209*^9}, {
  3.8826227742481966`*^9, 3.882622779039426*^9}, {3.8826234997348247`*^9, 
  3.8826235023719788`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"7fc0aa4d-33ab-4b81-9147-1aca72ad9068"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"\:65e0\:6807\:9898\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Tau]$$], 0, 10}}, Typeset`size$$ = {
    360., {120., 125.375}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ReplaceAll[$CellContext`graph, $CellContext`t -> $CellContext`\[Tau]$$],
       "Specifications" :> {{$CellContext`\[Tau]$$, 0, 10, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{408., {155., 161.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.882621027553838*^9, 3.882621041033246*^9}, 
   3.8826210935155063`*^9, {3.8826212704358816`*^9, 3.882621325035532*^9}, 
   3.882621376206521*^9, 3.8826214141368165`*^9, 3.8826215449771724`*^9, 
   3.8826216554332647`*^9, 3.8826216993432446`*^9, 3.882622478331765*^9, 
   3.8826230469137716`*^9, {3.8826231827947164`*^9, 3.8826232506651287`*^9}, 
   3.882623472390513*^9, 3.882623502870916*^9, 3.882623836836918*^9, 
   3.8826247980179358`*^9, 3.882689073273567*^9, 3.882689138249714*^9, 
   3.882689491263939*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"43929aa9-16d6-4427-9285-008b84964d1e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<C:\\\\Users\\\\bcynuaa\\\\Desktop\\\\animate.gif\>\"", ",", 
    "animate"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.882623947471104*^9, 3.8826239851335387`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"912b71cd-646a-4421-9f44-25fd95a589ad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"graphlist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", "10"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"graphlist", ",", 
      RowBox[{"graph", "/.", 
       RowBox[{"t", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"0.2", "i"}], ")"}]}]}]}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8826236909786215`*^9, 3.8826238124244003`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"7477e00f-6221-4a26-a985-5b4619dac798"],

Cell[CellGroupData[{

Cell[BoxData["graphlist"], "Input",
 CellChangeTimes->{{3.8826237945355387`*^9, 3.882623796016912*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"212f1bf2-ec20-469c-93e7-94e0510c5964"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {0.08682408883346517, -0.492403876506104}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{0.08682408883346517, -0.492403876506104}, {
       0.18943013183116578`, -0.7743116627418765}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.08682408883346517, -0.492403876506104}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.18943013183116578`, -0.7743116627418765}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {0.18308030633578393`, -0.4652758337072704}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{0.18308030633578393`, -0.4652758337072704}, {
       0.30964008743812255`, -0.7372733002530603}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.18308030633578393`, -0.4652758337072704}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.30964008743812255`, -0.7372733002530603}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {0.06147811952931954, -0.4962060467377828}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{0.06147811952931954, -0.4962060467377828}, {
       0.1674017215726541, -0.7768841373151651}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.06147811952931954, -0.4962060467377828}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.1674017215726541, -0.7768841373151651}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {-0.16802330410715588`, -0.4709226786606419}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{-0.16802330410715588`, -0.4709226786606419}, \
{-0.22994240795571108`, -0.7644631777039457}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.16802330410715588`, -0.4709226786606419}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.22994240795571108`, -0.7644631777039457}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {-0.3290327551227131, -0.37648033953495724`}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{-0.3290327551227131, -0.37648033953495724`}, \
{-0.5888215016014025, -0.5265130266502365}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.3290327551227131, -0.37648033953495724`}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.5888215016014025, -0.5265130266502365}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {-0.3910467739383656, -0.3115805202389854}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{-0.3910467739383656, -0.3115805202389854}, \
{-0.6806689774371187, -0.38980442477287336`}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.3910467739383656, -0.3115805202389854}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.6806689774371187, -0.38980442477287336`}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {-0.34237829983704265`, -0.36438592151823884`}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{-0.34237829983704265`, -0.36438592151823884`}, \
{-0.5846471335958532, -0.5413204071030049}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.34237829983704265`, -0.36438592151823884`}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.5846471335958532, -0.5413204071030049}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {-0.16805768723234796`, -0.47091040948583235`}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{-0.16805768723234796`, -0.47091040948583235`}, \
{-0.23634520115551172`, -0.7630350668535282}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.16805768723234796`, -0.47091040948583235`}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{-0.23634520115551172`, -0.7630350668535282}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {0.07479808957718737, -0.49437358929821795`}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{0.07479808957718737, -0.49437358929821795`}, {
       0.14906940859655543`, -0.7850345105984906}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.07479808957718737, -0.49437358929821795`}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.14906940859655543`, -0.7850345105984906}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}], ",", 
   GraphicsBox[{
     {RGBColor[1, 0.5, 0], Thickness[0.01], 
      LineBox[{{0, 0}, {0.1774936880991925, -0.46743554709173174`}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.01], 
      LineBox[{{0.1774936880991925, -0.46743554709173174`}, {
       0.31675796947019824`, -0.7331524263715723}}]}, 
     {GrayLevel[0], Thickness[0.005], Dashing[{Small, Small}], 
      LineBox[{{0, 0}, {-0.30000000000000004`, -0.9800000000000001}}]}, 
     {GrayLevel[0], PointSize[Large], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.1774936880991925, -0.46743554709173174`}]}, 
     {RGBColor[1, 0, 0], PointSize[Large], 
      PointBox[{0.31675796947019824`, -0.7331524263715723}]}},
    Axes->True,
    AxesLabel->{
      FormBox["\"x\"", TraditionalForm], 
      FormBox["\"y\"", TraditionalForm]},
    AxesOrigin->{0, 0},
    Frame->True,
    PlotRange->{{-0.8, 0.8}, {-1, 0}}]}], "}"}]], "Output",
 CellChangeTimes->{3.8826237963524323`*^9, 3.882623837025617*^9, 
  3.882624823910034*^9, 3.88268908994092*^9, 3.8826891571608686`*^9, 
  3.8826895056553926`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"f1d73ff7-eaad-498b-8f5d-33059d0b675b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", "10"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<C:\\\\Users\\\\bcynuaa\\\\Desktop\\\\\>\"", ",", 
        RowBox[{"ToString", "[", "i", "]"}], ",", "\"\<.png\>\""}], "]"}], 
      ",", 
      RowBox[{"graphlist", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", "10"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<C:\\\\Users\\\\bcynuaa\\\\Desktop\\\\\>\"", ",", 
        RowBox[{"ToString", "[", "i", "]"}], ",", "\"\<.pdf\>\""}], "]"}], 
      ",", 
      RowBox[{"graphlist", "[", 
       RowBox[{"[", 
        RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.882624286911601*^9, 3.882624309344034*^9}, {
  3.8826243404916344`*^9, 3.882624353922535*^9}, {3.8826243879655824`*^9, 
  3.8826243923302298`*^9}, {3.8826244315945687`*^9, 3.8826244319599414`*^9}, {
  3.882624599004545*^9, 3.88262464162425*^9}, {3.8826246805716867`*^9, 
  3.8826246806900434`*^9}, {3.8826247214873686`*^9, 3.8826247439106503`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"1d3fcc67-33f8-4373-beca-03c18ec44003"]
}, Open  ]]
},
WindowSize->{1440., 741.75},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, -6}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (2020\:5e7412\:670812\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4a7d25f1-7098-41d3-a062-fc5eb6241084"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 167, 3, 97, "Title",ExpressionUUID->"b665d37f-68c1-45a9-8208-609b36e6e820"],
Cell[750, 27, 597, 16, 120, "Input",ExpressionUUID->"82a421d6-60da-40ca-8786-c77a5815680c"],
Cell[1350, 45, 2164, 63, 149, "Input",ExpressionUUID->"b5fc2f36-3ea6-4449-88c4-121d9ff55532"],
Cell[CellGroupData[{
Cell[3539, 112, 210, 3, 43, "Input",ExpressionUUID->"31632029-b4cc-41c3-aa00-714d6b26787a"],
Cell[3752, 117, 3009, 76, 62, "Output",ExpressionUUID->"eef6f888-8a48-48a7-84a6-b1ac7e5b410c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6798, 198, 958, 25, 114, "Input",ExpressionUUID->"316ef283-ec0a-4a96-881c-557474e3ed22"],
Cell[7759, 225, 2987, 77, 62, "Output",ExpressionUUID->"9d6c5b48-7551-414e-ad77-5757fc25b3e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10783, 307, 1406, 40, 154, "Input",ExpressionUUID->"6cace196-82a6-47d3-9445-227e5925dd50"],
Cell[12192, 349, 2132, 52, 49, "Output",ExpressionUUID->"c23d7552-0527-49c9-80d9-349a08abc76e"],
Cell[14327, 403, 1951, 47, 49, "Output",ExpressionUUID->"db625bd3-41cb-42fe-a9e7-ace0c2f1e001"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16327, 456, 145, 3, 97, "Title",ExpressionUUID->"a58b2f6a-7a83-4d64-92c2-f1aa1e9cde75"],
Cell[16475, 461, 2340, 62, 253, "Input",ExpressionUUID->"ebe324a8-2c12-4e1c-8fc8-5c687dd68a9f"],
Cell[CellGroupData[{
Cell[18840, 527, 613, 13, 64, "Input",ExpressionUUID->"fc6d7ac0-50d9-4bcc-8553-465d42be7c58"],
Cell[19456, 542, 98602, 1714, 67, "Output",ExpressionUUID->"9d25432f-23b2-4bb4-bd84-7b66117724ea"]
}, Open  ]],
Cell[118073, 2259, 597, 16, 47, "Input",ExpressionUUID->"6b699dbc-949f-45f3-a56b-2a1439e7ac09"],
Cell[CellGroupData[{
Cell[118695, 2279, 1794, 40, 216, "Input",ExpressionUUID->"c8a5940c-12d5-4754-9b79-45165a0da70f"],
Cell[120492, 2321, 70551, 1217, 277, "Output",ExpressionUUID->"a254b54a-2eca-44e3-ba6a-1fb30d7a60c0"]
}, Open  ]],
Cell[191058, 3541, 484, 12, 79, "Input",ExpressionUUID->"a247b9c9-4d5b-467b-892c-59e2f7f5f5b0"],
Cell[191545, 3555, 1444, 42, 98, "Input",ExpressionUUID->"885e057c-7eb8-4b0d-b8e8-c9486bab12dc"],
Cell[192992, 3599, 3295, 76, 473, "Input",ExpressionUUID->"cc83e06d-1720-4428-9183-8d1dc585f614"],
Cell[CellGroupData[{
Cell[196312, 3679, 770, 16, 64, "Input",ExpressionUUID->"7fc0aa4d-33ab-4b81-9147-1aca72ad9068"],
Cell[197085, 3697, 2484, 46, 335, "Output",ExpressionUUID->"43929aa9-16d6-4427-9285-008b84964d1e"]
}, Open  ]],
Cell[199584, 3746, 318, 7, 43, "Input",ExpressionUUID->"912b71cd-646a-4421-9f44-25fd95a589ad"],
Cell[199905, 3755, 629, 17, 62, "Input",ExpressionUUID->"7477e00f-6221-4a26-a985-5b4619dac798"],
Cell[CellGroupData[{
Cell[200559, 3776, 182, 2, 28, "Input",ExpressionUUID->"212f1bf2-ec20-469c-93e7-94e0510c5964"],
Cell[200744, 3780, 9348, 206, 314, "Output",ExpressionUUID->"f1d73ff7-eaad-498b-8f5d-33059d0b675b"]
}, Open  ]],
Cell[210107, 3989, 1519, 38, 109, "Input",ExpressionUUID->"1d3fcc67-33f8-4373-beca-03c18ec44003"]
}, Open  ]]
}
]
*)

